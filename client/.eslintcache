[{"/Users/krzak/git/dating-app/client/src/index.js":"1","/Users/krzak/git/dating-app/client/src/App.js":"2","/Users/krzak/git/dating-app/client/src/components/TestAPI.js":"3","/Users/krzak/git/dating-app/client/src/components/Header.js":"4","/Users/krzak/git/dating-app/client/src/components/Card.js":"5","/Users/krzak/git/dating-app/client/src/components/Register.js":"6","/Users/krzak/git/dating-app/client/src/components/Footer.js":"7","/Users/krzak/git/dating-app/client/src/components/registration/Interests.js":"8","/Users/krzak/git/dating-app/client/src/components/registration/Hobby.js":"9","/Users/krzak/git/dating-app/client/src/components/registration/HobbiesData.js":"10","/Users/krzak/git/dating-app/client/src/components/registration/PoliticalSpectrum.js":"11","/Users/krzak/git/dating-app/client/src/components/registration/ShowMe.js":"12","/Users/krzak/git/dating-app/client/src/components/registration/OrientationOption.js":"13"},{"size":220,"mtime":1609550394562,"results":"14","hashOfConfig":"15"},{"size":975,"mtime":1617213366183,"results":"16","hashOfConfig":"15"},{"size":936,"mtime":1616775731349,"results":"17","hashOfConfig":"15"},{"size":813,"mtime":1616781205094,"results":"18","hashOfConfig":"15"},{"size":1353,"mtime":1616793873298,"results":"19","hashOfConfig":"15"},{"size":7162,"mtime":1617227121491,"results":"20","hashOfConfig":"15"},{"size":291,"mtime":1616967902954,"results":"21","hashOfConfig":"15"},{"size":1469,"mtime":1617226039051,"results":"22","hashOfConfig":"15"},{"size":1181,"mtime":1617225562709,"results":"23","hashOfConfig":"15"},{"size":4968,"mtime":1617132745297,"results":"24","hashOfConfig":"15"},{"size":5299,"mtime":1617134702926,"results":"25","hashOfConfig":"15"},{"size":1312,"mtime":1617152067404,"results":"26","hashOfConfig":"15"},{"size":606,"mtime":1617151665021,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1yyf5pd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/krzak/git/dating-app/client/src/index.js",[],["61","62"],"/Users/krzak/git/dating-app/client/src/App.js",[],"/Users/krzak/git/dating-app/client/src/components/TestAPI.js",[],["63","64"],"/Users/krzak/git/dating-app/client/src/components/Header.js",[],"/Users/krzak/git/dating-app/client/src/components/Card.js",["65","66"],"import \"../css/Card.css\"\n\nimport React, {Component, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\n\n\nfunction Card() {\n\n    const [users, setUsers] = useState([\n        {\n            id: 1,\n            name: \"John\",\n            age: 20,\n            level: 90\n        },\n        {\n            id: 2,\n            age: 20,\n            name: \"Monica\",\n            level: 55\n        },\n        {\n            id: 3,\n            age: 20,\n            name: \"Gambrysiaaaa\",\n            level: 100\n        },\n    ]);\n\n\n    return (\n\n        <div style={{marginTop: \"7vh\"}}>\n\n            <div className=\"card__wrapper\">\n                {users.map(user => (\n                    <TinderCard\n                        preventSwipe={['down', 'up']}\n                        className=\"card swipe\"\n                        key={user.id}\n                    >\n                        <div className=\"wrapper\">\n                            <div className=\"card__level\">\n                                <h2>{user.level}</h2>\n                            </div>\n                            <div className=\"card__name\">\n                                <h2>{user.name}</h2>\n                            </div>\n                        </div>\n\n                    </TinderCard>\n                ))}\n            </div>\n        </div>\n\n    );\n}\n\nexport default Card;","/Users/krzak/git/dating-app/client/src/components/Register.js",["67","68","69","70","71"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport {genderOptions} from 'gender-options';\nimport {MenuItem, Select} from \"@material-ui/core\";\nimport Interests from \"./registration/Interests\";\nimport '../css/Register.css';\nimport ShowMe from \"./registration/ShowMe\";\nimport {PoliticalSpectrum} from \"./registration/PoliticalSpectrum\";\nimport { useForm, Controller } from \"react-hook-form\";\n\n\nexport default function Register() {\n\n    const [gender, setGender] = React.useState('default');\n    const handleGenderChange = (event) => {\n        setGender(event.target.value);\n\n    };\n\n    const interests = {};\n\n    const { register, handleSubmit, watch, errors, control, setValue } = useForm();\n    const onSubmit = data => {\n        const allData = {...data, interests}\n        console.log(allData);\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className=\"register__paper\">\n                <Avatar className=\"register__avatar\">\n                    <CreateIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up now\n                </Typography>\n                <Typography\n                    component=\"h6\"\n                    variant=\"h6\"\n                    style={{\n                        color: '#a5a5a5',\n                        fontStyle: 'italic',\n                        fontSize: '12pt',\n                        paddingTop: '5px'\n                    }}\n                >\n                    let the algorithm do its magic âœ¨\n                </Typography>\n\n                <form className=\"register__form\" noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                inputRef={register}\n                                name=\"name\"\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                inputRef={register}\n                                name=\"email\"\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={register}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                type=\"number\"\n                                id=\"age\"\n                                label=\"Age\"\n                                name=\"age\"\n                                autoComplete=\"age\"\n                                inputRef={register}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Controller\n                                as={\n                                    <Select\n                                        variant=\"outlined\"\n                                        style={{width: '100%'}}\n                                        labelId=\"gender-select\"\n                                        defaultValue=\"default\"\n                                    >\n                                        <MenuItem disabled value=\"default\">Select gender</MenuItem>\n                                        {genderOptions.standard.map((gender, index) => (\n                                            <MenuItem key={index} value={gender.value}>{gender.label}</MenuItem>\n                                        ))}\n                                    </Select>\n                                }\n                                name=\"gender\"\n                                control={control}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <ShowMe/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"profession\"\n                                label=\"Profession\"\n                                name=\"profession\"\n                                inputProps={{ref: register}}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Interests\n                                onClick={(name, value) => {interests[name] = value}}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <PoliticalSpectrum/>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{marginTop: \"2em\", marginBottom: \"2em\"}}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}","/Users/krzak/git/dating-app/client/src/components/Footer.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/Interests.js",["72"],"import \"../../css/registration/Interests.css\"\n\nimport React from 'react';\nimport {FormLabel} from \"@material-ui/core\";\nimport Hobby from \"./Hobby\";\nimport {interests} from './HobbiesData'\n\nexport default function Interests(props) {\n    console.log(props);\n    return (\n        <div>\n            <FormLabel component=\"legend\" style={{padding: '8px 0'}}>\n                Select your favourites\n            </FormLabel>\n\n            {Object.keys(interests).map((categoryName, index) => (\n                <div key={index}>\n                    <FormLabel component=\"legend\"\n                               style={{\n                                   padding: '8px 0',\n                                   fontSize: '16px',\n                                   textTransform: 'capitalize'\n                               }}>\n                        {categoryName}\n                    </FormLabel>\n                    <div\n                        key={index}\n                        className=\"interests__group\">\n                        {interests[categoryName].map(hobby => (\n                            <Hobby\n                                key={hobby['label']}\n                                symbol={hobby['symbol']}\n                                label={hobby['label']}\n                                onClick={props.onClick}\n                            />\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n\n    );\n}","/Users/krzak/git/dating-app/client/src/components/registration/Hobby.js",[],["73","74"],"/Users/krzak/git/dating-app/client/src/components/registration/HobbiesData.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/PoliticalSpectrum.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/ShowMe.js",["75"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport '../../css/registration/ShowMe.css';\nimport OrientationOption from \"./OrientationOption\";\nimport {genderOptions} from 'gender-options';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    }\n}));\n\nfunction ShowMe() {\n\n    return (\n        <div >\n            <FormControl required error={null} component=\"fieldset\" >\n                <FormLabel >Show me</FormLabel>\n                <FormGroup style={{\n                    flexDirection:'row',\n                    marginLeft: '10px'\n                }}\n                >\n\n                    {genderOptions.standard.map(gender => (\n                        <OrientationOption\n                            key={gender.value}\n                            value={gender.value}\n                            label={gender.label} />\n                    ))}\n\n                </FormGroup>\n                <FormHelperText>Choose at least one</FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\nexport default ShowMe;","/Users/krzak/git/dating-app/client/src/components/registration/OrientationOption.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":16,"nodeType":"84","messageId":"85","endLine":3,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":9,"column":19,"nodeType":"84","messageId":"85","endLine":9,"endColumn":27},{"ruleId":"82","severity":1,"message":"87","line":21,"column":12,"nodeType":"84","messageId":"85","endLine":21,"endColumn":18},{"ruleId":"82","severity":1,"message":"88","line":22,"column":11,"nodeType":"84","messageId":"85","endLine":22,"endColumn":29},{"ruleId":"82","severity":1,"message":"89","line":29,"column":37,"nodeType":"84","messageId":"85","endLine":29,"endColumn":42},{"ruleId":"82","severity":1,"message":"90","line":29,"column":44,"nodeType":"84","messageId":"85","endLine":29,"endColumn":50},{"ruleId":"82","severity":1,"message":"91","line":29,"column":61,"nodeType":"84","messageId":"85","endLine":29,"endColumn":69},{"ruleId":"82","severity":1,"message":"83","line":3,"column":16,"nodeType":"84","messageId":"85","endLine":3,"endColumn":25},{"ruleId":"76","replacedBy":"92"},{"ruleId":"78","replacedBy":"93"},{"ruleId":"82","severity":1,"message":"94","line":11,"column":7,"nodeType":"84","messageId":"85","endLine":11,"endColumn":16},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'gender' is assigned a value but never used.","'handleGenderChange' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'setValue' is assigned a value but never used.",["95"],["96"],"'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]