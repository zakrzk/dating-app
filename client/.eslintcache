[{"/Users/krzak/git/dating-app/client/src/index.js":"1","/Users/krzak/git/dating-app/client/src/App.js":"2","/Users/krzak/git/dating-app/client/src/components/TestAPI.js":"3","/Users/krzak/git/dating-app/client/src/components/Header.js":"4","/Users/krzak/git/dating-app/client/src/components/Card.js":"5","/Users/krzak/git/dating-app/client/src/components/Register.js":"6","/Users/krzak/git/dating-app/client/src/components/Footer.js":"7","/Users/krzak/git/dating-app/client/src/components/registration/Interests.js":"8","/Users/krzak/git/dating-app/client/src/components/registration/Hobby.js":"9","/Users/krzak/git/dating-app/client/src/components/registration/HobbiesData.js":"10","/Users/krzak/git/dating-app/client/src/components/registration/PoliticalSpectrum.js":"11","/Users/krzak/git/dating-app/client/src/components/registration/ShowMe.js":"12","/Users/krzak/git/dating-app/client/src/components/registration/OrientationOption.js":"13","/Users/krzak/git/dating-app/client/src/components/Login.js":"14"},{"size":220,"mtime":1609550394562,"results":"15","hashOfConfig":"16"},{"size":1446,"mtime":1619394303183,"results":"17","hashOfConfig":"16"},{"size":936,"mtime":1616775731349,"results":"18","hashOfConfig":"19"},{"size":1403,"mtime":1619476618100,"results":"20","hashOfConfig":"16"},{"size":1870,"mtime":1619392168679,"results":"21","hashOfConfig":"16"},{"size":10207,"mtime":1618763609748,"results":"22","hashOfConfig":"16"},{"size":291,"mtime":1616967902954,"results":"23","hashOfConfig":"16"},{"size":1445,"mtime":1618519076211,"results":"24","hashOfConfig":"16"},{"size":1285,"mtime":1618608228484,"results":"25","hashOfConfig":"16"},{"size":4965,"mtime":1619012861664,"results":"26","hashOfConfig":"16"},{"size":6043,"mtime":1618701929910,"results":"27","hashOfConfig":"16"},{"size":1393,"mtime":1618754566699,"results":"28","hashOfConfig":"16"},{"size":896,"mtime":1618519498911,"results":"29","hashOfConfig":"16"},{"size":4487,"mtime":1619395665979,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"q6nv83",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1yyf5pd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"33"},"/Users/krzak/git/dating-app/client/src/index.js",[],["68","69"],"/Users/krzak/git/dating-app/client/src/App.js",[],"/Users/krzak/git/dating-app/client/src/components/TestAPI.js",[],["70","71"],"/Users/krzak/git/dating-app/client/src/components/Header.js",[],"/Users/krzak/git/dating-app/client/src/components/Card.js",["72","73","74","75"],"import \"../css/Card.css\"\n\nimport React, {Component, useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport {serverHost} from \"./Register\";\nconst jwt = require(\"jsonwebtoken\");\n\n\nfunction Card() {\n\n    const [users, setUsers] = useState([]);\n    const token = JSON.parse(localStorage.getItem('JWT'))?.token;\n    let bearer = 'Bearer ' + token;\n\n    useEffect(() => {\n        // fetch users from api\n        fetch(\"//\" + serverHost + \":3006\" + \"/matches\", {\n            method: 'GET',\n            headers: {\n                'Authorization': bearer,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            }\n        })\n            .then(data => data.json())\n            .then(data => {\n                    setUsers(data)\n                }\n            )\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n\n\n\n    return (\n\n        <div style={{marginTop: \"7vh\"}}>\n\n            <div className=\"card__wrapper\">\n                {users.map(user => (\n                    user.matchScore ?\n                    <TinderCard\n                        preventSwipe={['down', 'up']}\n                        className=\"card swipe\"\n                        key={user._id}\n                    >\n                        <div className=\"wrapper\">\n                            <div className=\"card__level\">\n                                <h5>{user.profession}</h5>\n                                {user.matchScore}%\n                            </div>\n                            <div className=\"card__name\">\n                                <h4>{user.firstName}, {user.age}</h4>\n                            </div>\n                        </div>\n\n                    </TinderCard> : null\n                ))}\n            </div>\n        </div>\n\n    );\n}\n\nexport default Card;","/Users/krzak/git/dating-app/client/src/components/Register.js",["76","77","78","79","80"],"import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport {genderOptions} from 'gender-options';\nimport {MenuItem, Select} from \"@material-ui/core\";\nimport Interests from \"./registration/Interests\";\nimport '../css/Register.css';\nimport ShowMe from \"./registration/ShowMe\";\nimport PoliticalSpectrum from \"./registration/PoliticalSpectrum\";\nimport {useForm, Controller} from \"react-hook-form\";\nimport {Redirect} from \"react-router\";\n\nexport let serverHost = process.env.REACT_APP_SERVER_HOST || \"localhost\";\n\nexport default function Register() {\n\n\n    let [submitted, setSubmitted] = useState(false);\n    let [errors, setErrors] = useState([]);\n\n    const [gender, setGender] = React.useState('default');\n    const handleGenderChange = (event) => {\n        setGender(event.target.value);\n\n    };\n\n    const interests = {};\n    const politics = {};\n    const orientation = {};\n\n\n    const {register, handleSubmit, watch, control, setValue} = useForm();\n    const onSubmit = data => {\n        const allData = {...data, interests, orientation, politics};\n\n        console.log(JSON.stringify({\n            firstName: allData.name,\n            email: allData.email,\n            passwordHash: allData.password,\n            age: parseInt(allData.age, 10),\n            gender: allData.gender,\n            orientation: Object.keys(allData.orientation),\n            profession: allData.profession,\n            hobbies: Object.keys(allData.interests),\n            politicalEconomics: allData.politics.economics,\n            politicalDiplomatic: allData.politics.diplomatic,\n            politicalCivil: allData.politics.civil,\n            politicalSocietal: allData.politics.societal\n        }));\n\n        console.log(222222222)\n\n        fetch(\"//\" + serverHost + \":3006\" + \"/users\", {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({\n                firstName: allData.name,\n                email: allData.email,\n                passwordHash: allData.password,\n                age: parseInt(allData.age, 10),\n                gender: allData.gender,\n                orientation: Object.keys(allData.orientation),\n                profession: allData.profession,\n                hobbies: Object.keys(allData.interests),\n                politicalEconomics: allData.politics.economics,\n                politicalDiplomatic: allData.politics.diplomatic,\n                politicalCivil: allData.politics.civil,\n                politicalSocietal: allData.politics.societal\n            })\n        })\n            .then(data => data.json())\n            .then(data => {\n                    if (data.error) {\n                        console.log(2);\n                        console.log(data)\n                        setErrors(data.message)\n                    } else {\n                        console.log(3);\n                        setSubmitted(true)\n                    }\n                }\n            )\n            .catch(err => {\n                console.log(err);\n                setSubmitted(true)\n\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className=\"register__paper\">\n                <Avatar className=\"register__avatar\">\n                    <CreateIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up now\n                </Typography>\n                <Typography\n                    component=\"h6\"\n                    variant=\"h6\"\n                    style={{\n                        color: '#a5a5a5',\n                        fontStyle: 'italic',\n                        fontSize: '12pt',\n                        paddingTop: '5px'\n                    }}\n                >\n                    let the algorithm do its magic ✨\n                </Typography>\n\n                <form className=\"register__form\" noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                inputRef={register}\n                                name=\"name\"\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                inputRef={register}\n                                name=\"email\"\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={register}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                type=\"number\"\n                                id=\"age\"\n                                label=\"Age\"\n                                name=\"age\"\n                                autoComplete=\"age\"\n                                inputRef={register}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Controller\n                                as={\n                                    <Select\n                                        variant=\"outlined\"\n                                        style={{width: '100%'}}\n                                        labelId=\"gender-select\"\n                                        defaultValue=\"default\"\n                                    >\n                                        <MenuItem disabled value=\"default\">Select gender</MenuItem>\n                                        {genderOptions.standard.map((gender, index) => (\n                                            <MenuItem key={index} value={gender.value}>{gender.label}</MenuItem>\n                                        ))}\n                                    </Select>\n                                }\n                                name=\"gender\"\n                                control={control}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <ShowMe\n                                onClick={(name, value) => {\n                                    orientation[name] = value\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"profession\"\n                                label=\"Profession\"\n                                name=\"profession\"\n                                inputProps={{ref: register}}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Interests\n                                onClick={(name, value) => {\n                                    interests[name] = value\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <PoliticalSpectrum\n                                onClick={(name, value) => {\n                                    politics[name] = value\n                                }}\n                            />\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{marginTop: \"2em\", marginBottom: \"2em\"}}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n\n                {errors.length > 1 ? errors.map((err, index) => (\n                    <p style={{color: 'red'}} key={index}>{Object.values(err.constraints)}</p>\n                )) : null}\n\n            </div>\n            {submitted === true ? <Redirect to=\"/success\"/> : null}\n        </Container>\n\n    );\n}","/Users/krzak/git/dating-app/client/src/components/Footer.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/Interests.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/Hobby.js",[],"/Users/krzak/git/dating-app/client/src/components/registration/HobbiesData.js",[],["81","82"],"/Users/krzak/git/dating-app/client/src/components/registration/PoliticalSpectrum.js",["83","84","85","86"],"import \"../../css/registration/PoliticalSpectrum.css\"\n\nimport React, {Component, useRef} from 'react';\nimport {Chip, FormLabel, Slider} from \"@material-ui/core\";\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport Hobby from \"./Hobby\";\n\nconst marks = {\n    economics: [\n        {\n            value: -5,\n            label: 'Equality',\n        },\n        {\n            value: 5,\n            label: 'Markets',\n        }\n    ],\n    diplomatic: [\n\n        {\n            value: -5,\n            label: 'Nation',\n        },\n        {\n            value: 5,\n            label: 'World',\n        }\n    ],\n    civil: [\n\n        {\n            value: -5,\n            label: 'Liberty',\n        },\n        {\n            value: 5,\n            label: 'Authority',\n        }\n    ],\n    societal: [\n\n        {\n            value: -5,\n            label: 'Tradition',\n        },\n        {\n            value: 5,\n            label: 'Progress',\n        }\n    ]\n}\n\nfunction valuetext(value) {\n    return `${value}°C`;\n}\n\nexport default function PoliticalSpectrum(props) {\n\n    const handleClick = (event, newValue) => {\n        const value = newValue;\n        let label = event.target.getAttribute('label');\n        if (label) {\n            label = event.target.getAttribute('label')\n            props.onClick(label, value)\n        }\n        else {\n            label = event.target.parentNode.attributes[1].nodeValue\n            props.onClick(label, value)\n        }\n    };\n\n        return (\n            <div>\n                <FormLabel component=\"legend\" style={{padding: '8px 0'}}>\n                    Your political spectrum\n                </FormLabel>\n\n                <h4>Economic Axis</h4>\n                <p><FormatQuoteIcon/>Those with higher Equality scores believe the economy should distribute value evenly among the\n                    populace. They tend to support progressive tax codes, social programs, and at high values,\n                    socialism.</p>\n                <p>Those with higher Market scores believe the economy should be focused on rapid growth. <br/> They\n                    tend to\n                    support lower taxes, privatization, deregulation, and at high values, laissez-faire capitalism.<FormatQuoteIcon/></p>\n                <Slider\n                    defaultValue={0}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-custom\"\n                    step={1}\n                    min={-5}\n                    max={5}\n                    marks={marks.diplomatic}\n                    style={{marginBottom: '60px'}}\n                    onChange={handleClick}\n                    label='economics'\n                />\n\n                <h4>Diplomatic Axis</h4>\n                <p>Those with higher Nation scores are patriotic and nationalist. They often believe in an aggressive\n                    foreign policy, valuing the military, strength, sovereignty, and at high values, territorial\n                    expansion.\n                </p>\n                <p>Those with higher Globe scores are cosmopolitan and globalist. They often believe in a peaceful\n                    foreign policy, emphasizing diplomacy, cooperation, integration, and at high values, a world\n                    government.\n\n                </p>\n\n                <Slider\n                    defaultValue={0}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-custom\"\n                    step={1}\n                    min={-5}\n                    max={5}\n\n                    marks={marks.diplomatic}\n                    style={{marginBottom: '60px'}}\n\n                    onChange={handleClick}\n                    label='diplomatic'\n\n                />\n\n                <h4>Civil Axis</h4>\n                <p>Those with higher Liberty scores believe in strong civil liberties. They tend to support democracy\n                    and oppose state intervention in personal lives. Note that this refers to civil liberties, not\n                    economic liberties.\n                </p>\n                <p>Those with higher Authority scores believe in strong state power. They tend to support state\n                    intervention in personal lives, government surveillance, and at high values, censorship or\n                    autocracy.\n                </p>\n                <Slider\n                    defaultValue={0}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-custom\"\n                    step={1}\n                    onChange={handleClick}\n                    min={-5}\n                    max={5}\n                    label='civil'\n                    marks={marks.civil}\n                    style={{marginBottom: '60px'}}\n\n                />\n\n                <h4>Societal Axis</h4>\n                <p>Those with higher Tradition scores believe in traditional values and strict adherence to a moral code. Though not always, they are usually religious, and support the status quo or the status quo ante.\n                </p>\n                <p>Those with higher Progress scores believe in social change and rationality. Though not always, they are usually secular or atheist, and support environmental action and scientific or technological research.\n                </p>\n                <Slider\n                    defaultValue={0}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-custom\"\n                    step={1}\n                    label='societal'\n                    min={-5}\n                    onChange={handleClick}\n                    max={5}\n                    marks={marks.societal}\n                    style={{marginBottom: '60px'}}\n\n                />\n\n                <p style={{fontSize: '11px', textAlign:'right'}}>Source of the definitions: <a rel=\"noreferrer\" target=\"_blank\" href=\"https://8values.github.io/\">https://8values.github.io</a>\n                </p>\n\n            </div>\n\n        );\n}","/Users/krzak/git/dating-app/client/src/components/registration/ShowMe.js",["87"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport '../../css/registration/ShowMe.css';\nimport OrientationOption from \"./OrientationOption\";\nimport {genderOptions} from 'gender-options';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    }\n}));\n\nfunction ShowMe(props) {\n\n    return (\n        <div >\n            <FormControl required error={null} component=\"fieldset\" >\n                <FormLabel >Show me</FormLabel>\n                <FormGroup style={{\n                    flexDirection:'row',\n                    marginLeft: '10px'\n                }}\n                >\n\n                    {genderOptions.standard.map(gender => (\n                        <OrientationOption\n                            key={gender.value}\n                            value={gender.value}\n                            label={gender.label}\n                            onClick={props.onClick}\n                        />\n                    ))}\n\n                </FormGroup>\n                <FormHelperText>Choose at least one</FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\nexport default ShowMe;","/Users/krzak/git/dating-app/client/src/components/registration/OrientationOption.js",["88"],"import React, {useRef} from 'react';\nimport {Checkbox, Chip, FormControlLabel} from \"@material-ui/core\";\n\n\nfunction OrientationOption(props) {\n    const checkboxRef = useRef(null)\n    const handleClick = (event) => {\n        const attribute = Boolean (event.target.checked);\n        props.onClick(props.label,  attribute)\n\n    };\n    return (\n        <>\n            <FormControlLabel\n                style={{width: 'calc(100% * (1/2) - 10px - 1px)'}}\n                value=\"end\"\n                control={\n                    <Checkbox\n                        ref={checkboxRef}\n                        inputProps={{'aria-label': props.value}}\n                        color=\"primary\"\n                        onClick={handleClick}\n\n                    />}\n                label={props.label}\n                labelPlacement=\"end\"\n            />\n        </>\n    );\n}\n\nexport default OrientationOption;","/Users/krzak/git/dating-app/client/src/components/Login.js",["89","90","91","92","93","94","95","96"],"import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport '../css/Register.css';\nimport {useForm, Controller} from \"react-hook-form\";\nimport {Redirect, useHistory} from \"react-router\";\n\n\nexport default function Login() {\n\n    const history = useHistory();\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(false);\n    const [jwt, setJwt] = useState({});\n    const {register, handleSubmit, watch, errors, control, setValue} = useForm();\n\n    const onSubmit = data => {\n        const loginData = {...data}\n\n        console.log(data)\n\n        fetch('http://localhost:3006/users/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: loginData.email,\n                password: loginData.password,\n            })\n        })\n            .then(function (response) {\n                return response.json();\n            }).then(function (data) {\n                if (data.err) {\n                    setError(data.err)\n                }\n                if(data.userId && data.token) {\n                    localStorage.setItem('JWT', JSON.stringify({userId: data.userId, token: data.token}));\n                    setJwt({userId: data.userId, token: data.token})\n                    setSubmitted(true)\n                    history.push('/browse');\n                }\n        })\n            .catch(console.log)\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className=\"register__paper\">\n                <Avatar className=\"register__avatar\">\n                    <CreateIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Typography\n                    component=\"h6\"\n                    variant=\"h6\"\n                    style={{\n                        color: '#a5a5a5',\n                        fontStyle: 'italic',\n                        fontSize: '12pt',\n                        paddingTop: '5px'\n                    }}\n                >\n                    check your matches ✨\n                </Typography>\n\n                <form className=\"register__form\" noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                inputRef={register}\n                                name=\"email\"\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={register}\n                                defaultValue=\"\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{marginTop: \"2em\", marginBottom: \"2em\"}}\n                    >\n                        Sign Up\n                    </Button>\n\n                </form>\n\n                {error ? <p style={{color: 'red'}}>{error}</p> : null}\n            </div>\n\n            {/*{submitted === true ? <Redirect to=\"/browse\"/> : null}*/}\n        </Container>\n\n    );\n}",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":16,"nodeType":"105","messageId":"106","endLine":3,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":6,"column":7,"nodeType":"105","messageId":"106","endLine":6,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":17,"column":43,"nodeType":"110","messageId":"111","endLine":17,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":33,"column":8,"nodeType":"114","endLine":33,"endColumn":10,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":27,"column":12,"nodeType":"105","messageId":"106","endLine":27,"endColumn":18},{"ruleId":"103","severity":1,"message":"117","line":28,"column":11,"nodeType":"105","messageId":"106","endLine":28,"endColumn":29},{"ruleId":"103","severity":1,"message":"118","line":38,"column":36,"nodeType":"105","messageId":"106","endLine":38,"endColumn":41},{"ruleId":"103","severity":1,"message":"119","line":38,"column":52,"nodeType":"105","messageId":"106","endLine":38,"endColumn":60},{"ruleId":"108","severity":1,"message":"109","line":59,"column":43,"nodeType":"110","messageId":"111","endLine":59,"endColumn":44},{"ruleId":"97","replacedBy":"120"},{"ruleId":"99","replacedBy":"121"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":16,"nodeType":"105","messageId":"106","endLine":3,"endColumn":25},{"ruleId":"103","severity":1,"message":"122","line":3,"column":27,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},{"ruleId":"103","severity":1,"message":"123","line":4,"column":9,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"124","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"103","severity":1,"message":"125","line":11,"column":7,"nodeType":"105","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"103","severity":1,"message":"123","line":2,"column":19,"nodeType":"105","messageId":"106","endLine":2,"endColumn":23},{"ruleId":"103","severity":1,"message":"126","line":10,"column":18,"nodeType":"105","messageId":"106","endLine":10,"endColumn":28},{"ruleId":"103","severity":1,"message":"127","line":11,"column":9,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"128","line":17,"column":12,"nodeType":"105","messageId":"106","endLine":17,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":19,"column":12,"nodeType":"105","messageId":"106","endLine":19,"endColumn":15},{"ruleId":"103","severity":1,"message":"118","line":20,"column":36,"nodeType":"105","messageId":"106","endLine":20,"endColumn":41},{"ruleId":"103","severity":1,"message":"129","line":20,"column":43,"nodeType":"105","messageId":"106","endLine":20,"endColumn":49},{"ruleId":"103","severity":1,"message":"130","line":20,"column":51,"nodeType":"105","messageId":"106","endLine":20,"endColumn":58},{"ruleId":"103","severity":1,"message":"119","line":20,"column":60,"nodeType":"105","messageId":"106","endLine":20,"endColumn":68},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'jwt' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bearer'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'gender' is assigned a value but never used.","'handleGenderChange' is assigned a value but never used.","'watch' is assigned a value but never used.","'setValue' is assigned a value but never used.",["131"],["132"],"'useRef' is defined but never used.","'Chip' is defined but never used.","'Hobby' is defined but never used.","'useStyles' is assigned a value but never used.","'Controller' is defined but never used.","'Redirect' is defined but never used.","'submitted' is assigned a value but never used.","'errors' is assigned a value but never used.","'control' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [bearer]",{"range":"136","text":"137"},[919,921],"[bearer]"]